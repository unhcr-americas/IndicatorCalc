[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement legoupil@unhcr.org. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 UNHCR Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/development.html","id":"data-wrangling","dir":"Articles","previous_headings":"","what":"Data Wrangling","title":"Development","text":"indicator calculation based predefined frame, variable name variable value. Therefore indicator function organised 3 steps: Check standard frame/variable/modalities already present dataset (organised list..) fct_check_map apply mapping supplied argument within function fct_re_map Apply calculation - either append new variable existing data output just final vector results.","code":""},{"path":"/articles/development.html","id":"fct_check_map","dir":"Articles","previous_headings":"Data Wrangling","what":"fct_check_map","title":"Development","text":"","code":"mapper = list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(\"Does this household use anything for lighting?\",                         \"What source of electricity is used most of the time in this household?\"),               variable = c(\"LIGHT01\",                             \"LIGHT03\"),               mappattern = c(\"LIGHT01\",                             \"LIGHT03\") ),             modalitymap = data.frame(               variable = c( \"LIGHT01\",                              \"LIGHT03\", \"LIGHT03\", \"LIGHT03\"),               label = c( \"yes\",                         \"No electricity in household\", \"Other, specify\", \"Don't know\"),               standard = c( \"1\",                            \"1\", \"96\", \"98\"),               map = c(\"1\",                       \"1\", \"96\", \"98\")             )           )  ## Correct format data <- list(main = data.frame(                 LIGHT01 = c(\"1\",  \"1\",  \"0\", \"1\",  \"1\",  \"0\", \"1\",  \"1\",  \"1\"),                 LIGHT03 = c(\"1\", \"96\", \"98\", \"1\", \"96\", \"98\", \"0\", \"96\", \"98\"))              ) fct_check_map(datalist = data, mapper = mapper ) #> LIGHT01 is in the dataset and has at least one of the expected modality for calculation #> LIGHT03 is in the dataset and has at least one of the expected modality for calculation  ## One variable is not correctly  data <- list(main = data.frame(                 LIGHT01 = c(\"1\",  \"1\",  \"0\", \"1\",  \"1\",  \"0\", \"1\",  \"1\",  \"1\"),                 LIGH03 = c(\"1\", \"96\", \"98\", \"1\", \"96\", \"98\", \"0\", \"96\", \"98\"))              ) fct_check_map(datalist = data, mapper = mapper ) #> LIGHT01 is in the dataset and has at least one of the expected modality for calculation #> ℹ LIGHT03 standard variable was not found in the dataset.  ## The first variable does not include a single 1... data <- list(main = data.frame(                 LIGHT01 = c(\"0\",  \"0\",  \"0\", \"0\",  \"0\",  \"0\", \"0\",  \"0\",  \"0\"),                 LIGHT03 = c(\"1\", \"96\", \"98\", \"1\", \"96\", \"98\", \"0\", \"96\", \"98\"))              ) fct_check_map(datalist = data, mapper = mapper ) #> ℹ LIGHT01 standard variable in the dataset misses at least one response among : 1 #> LIGHT03 is in the dataset and has at least one of the expected modality for calculation"},{"path":"/articles/development.html","id":"fct_get_all_variable_names","dir":"Articles","previous_headings":"Data Wrangling","what":"fct_get_all_variable_names","title":"Development","text":"","code":"data <- kobocruncher::kobo_data( system.file(\"test.xlsx\",                                              package = \"IndicatorCalc\")) #> Warning: Expecting logical in G1286 / R1286C7: got 'no' varname <-   fct_get_all_variable_names(datalist = data) head(varname, 10) #> # A tibble: 10 × 2 #>    df    value                          #>    <chr> <chr>                          #>  1 main  introchannels.testorreal       #>  2 main  introchannels.remoteorinperson #>  3 main  introchannels.interviewstat    #>  4 main  incompleteinterviewnote        #>  5 main  ConsentInterview2              #>  6 main  screen.YesDisplaced            #>  7 main  screen.YesAtrisk               #>  8 main  screen.DisplacedNo             #>  9 main  screen.YesOver15               #> 10 main  screen.Over15No"},{"path":"/articles/development.html","id":"fct_re_map","dir":"Articles","previous_headings":"Data Wrangling","what":"fct_re_map","title":"Development","text":"","code":"mapper = list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(\"Does this household use anything for lighting?\",                         \"What source of electricity is used most of the time in this household?\"),               variable = c(\"LIGHT01\",                             \"LIGHT03\"),               mappattern = c(\"LIGHT01\",                             \"LIGHT03\") ),             modalitymap = data.frame(               variable = c( \"LIGHT01\",                              \"LIGHT03\", \"LIGHT03\", \"LIGHT03\"),               label = c( \"yes\",                 \"No electricity in household\", \"Other, specify\", \"Don't know\"),               standard = c( \"1\",                            \"1\", \"96\", \"98\"),               map = c(\"yes\",                       \"Noelec\", \"Other\", \"Dontknow\")             )           )   ## One variable is not correctly  datalist <- list(mainhousehold = data.frame(                 group.LIGHT01 = c(\"yes\",  \"yes\",  \"no\", \"yes\",  \"yes\",                                   \"no\", \"yes\",  \"yes\",  \"yes\"),                 group.LIGHT03 = c(\"Noelec\", \"Other\", \"Dontknow\", \"Noelec\", \"Other\",                                   \"Dontknow\", \"Nuclear\", \"Other\", \"Dontknow\"))              ) datalist <- fct_re_map(datalist = datalist, mapper = mapper ) #> Mapped levels for LIGHT01 are now: 1, no #> Mapped levels for LIGHT03 are now: 1, 96, 98, Nuclear  fct_check_map(datalist = datalist, mapper = mapper ) #> LIGHT01 is in the dataset and has at least one of the expected modality for calculation #> LIGHT03 is in the dataset and has at least one of the expected modality for calculation"},{"path":"/articles/development.html","id":"fct_plot_indic_donut","dir":"Articles","previous_headings":"Data Wrangling","what":"fct_plot_indic_donut","title":"Development","text":"","code":"test <- data.frame(   shelter = rbinom(20, 1, 0.5)) |>    dplyr::mutate( shelter =    labelled::labelled( shelter,                       labels = c( \"Yes\" = 1, \"No\" = 0),                       label = \"Access to adequate shelter\"))     fct_plot_indic_donut(indicator = test$shelter,                      subtitle_chart = NULL,                      caption_chart = NULL,                      ordered_threhold = NULL,                      iconunicode = \"e54f\")"},{"path":[]},{"path":"/articles/development.html","id":"inter_electricity","dir":"Articles","previous_headings":"Impact Indicators","what":"inter_electricity","title":"Development","text":"","code":"datalist <- kobocruncher::kobo_data( system.file(\"test.xlsx\",                                                   package = \"IndicatorCalc\")) #> Warning: Expecting logical in G1286 / R1286C7: got 'no' mapper <- list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(\"Does this household use anything for lighting?\",        \"What source of electricity is used most of the time in this household?\"),               variable = c(\"LIGHT01\",                             \"LIGHT03\"),               mappattern = c(\"LIGHT01\",                             \"LIGHT03\") ),             modalitymap = data.frame(               variable = c( \"LIGHT01\",                              \"LIGHT03\", \"LIGHT03\", \"LIGHT03\"),               label = c( \"yes\",                         \"No electricity in household\", \"Other, specify\", \"Don't know\"),               standard = c( \"1\",                            \"1\", \"96\", \"98\"),               map = c(\"yes\",                       \"1\", \"96\", \"98\")))   datalist <- inter_electricity( datalist =datalist, mapper = mapper  ) #> ℹ LIGHT01 standard variable was not found in the dataset. #> ℹ LIGHT03 standard variable was not found in the dataset. #> Mapped levels for LIGHT01 are now: 1, no, notell #> ℹ LIGHT03 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> Mapped levels for LIGHT03 are now: 1, 2, 3, 4, 5, 6, 7, 96, 98   table(datalist[[\"main\"]]$electricity) #>  #>    0    1  #>   81 1209 fct_plot_indic_donut(indicator = datalist[[\"main\"]]$electricity,                      iconunicode = \"f0e7\")"},{"path":"/articles/development.html","id":"inter_healthcare","dir":"Articles","previous_headings":"Impact Indicators","what":"inter_healthcare","title":"Development","text":"","code":"datalist <- kobocruncher::kobo_data( system.file(\"test.xlsx\",                                                  package = \"IndicatorCalc\")) #> Warning: Expecting logical in G1286 / R1286C7: got 'no'  mapper <-  list(             hierarchy = \"main\",             variablemap = data.frame(               label = c( \"In general, when anyone in your household is sick, where do they go to seek care?\", \"How long it takes to go there when you use the mode of transport mentioned above?\"),               variable = c(\"HEA01\",                             \"HEA03\"),               mappattern = c(\"HEA01\",                             \"HEA03\") ),             modalitymap = data.frame(               variable = c( \"HEA01\", \"HEA01\" ),               label = c(  \"Other, specify\", \"Don't know\"),               standard = c(\"96\", \"98\" ),               map = c(\"96\", \"98\" )))  datalist <- inter_healthcare(datalist, mapper ) #> ℹ HEA01 standard variable was not found in the dataset. #> ℹ HEA03 standard variable was not found in the dataset. #> ℹ HEA01 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> Mapped levels for HEA01 are now: 1, 2, 3, 4, 5, 96, 98 #> Mapped levels for HEA03 are now: 0, 1, 10, 100, 12, 120, 13, 15, 18, 2, 20, 22, 25, 3, 30, 300, 35, 4, 40, 45, 5, 50, 55, 6, 60, 7, 70, 75, 8, 90, 900  table(datalist[[\"main\"]]$healthcare) #>  #>    0    1  #>   93 1197 fct_plot_indic_donut(indicator = datalist[[\"main\"]]$healthcare,                      iconunicode = \"f479\")"},{"path":"/articles/development.html","id":"inter_drinkingwater","dir":"Articles","previous_headings":"Impact Indicators","what":"inter_drinkingwater","title":"Development","text":"","code":"datalist <- kobocruncher::kobo_data( system.file(\"test.xlsx\",                                                  package = \"IndicatorCalc\")) #> Warning: Expecting logical in G1286 / R1286C7: got 'no'  ## in the contextualised form - DWA03a has been skipped and all results are in min...  ## only manual transformation can adjust this before we use the mapper..  datalist[[\"main\"]]$DWA03a  <- \"1\"   datalist[[\"main\"]]$DWA03b <-    datalist[[\"main\"]]$VulnerabilityScoring.BasicNeeds.DWA03  # now the mapper mapper <-  list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(    \"What is the main source of drinking water for this household?\",   \"Where is this source located?\",   \"Unit used to measure time to access\",   \"How long does it take to go there, wait get water, and come back?\"),               variable = c(\"DWA01\",                             \"DWA02\",                             \"DWA03a\",                             \"DWA03b\" ),               mappattern = c(\"DWA01\",                             \"DWA02\",                             \"DWA03a\",                             \"DWA03b\" ) ),             modalitymap = data.frame(              variable = c(\"DWA01\",  \"DWA01\", \"DWA01\",\"DWA01\",  \"DWA01\",                     \"DWA02\",\"DWA02\", \"DWA02\",                    \"DWA03a\",\"DWA03a\"),              label = c(                  ##DWA01                 \"Unprotected Dug Well\",                  \"Unprotected Spring\",                 \"Surface Water (River, Stream, Pond, Dam, Canal)\",                 \"Other, specify\",                 \"Don't know\",                 ##DWA02                 \"In Own Dwelling\",                  \"In Own Yard/Plot\",                 \"Elsewhere\",                 ## DWA03a                 \"Minutes\",                  \"Hours\"    ),              standard = c( \"7\", \"9\", \"13\", \"96\", \"98\",                            \"1\", \"2\", \"3\",                            \"1\", \"2\"),              map = c( \"7\", \"9\", \"13\", \"96\", \"98\",                        \"1\", \"2\", \"3\",                         \"1\", \"2\") )           )    datalist <- inter_drinkingwater(datalist, mapper ) #> ℹ DWA01 standard variable was not found in the dataset. #> ℹ DWA02 standard variable was not found in the dataset. #> DWA03a is in the dataset and has at least one of the expected modality for calculation #> ℹ DWA03b standard variable in the dataset misses at least one response among : #> ℹ DWA01 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> The following `from` values were not present in `x`: 9 #> Mapped levels for DWA01 are now: 1, 11, 12, 13, 14, 15, 2, 3, 4, 5, 7, 96, 98 #> ℹ DWA02 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> Mapped levels for DWA02 are now: 1, 2, 3 #> The following `from` values were not present in `x`: 2 #> Mapped levels for DWA03a are now: 1 #> Mapped levels for DWA03b are now: 0, 10, 15, 2, 3, 30, 5, 90  ## Indicator summary table(datalist[[\"main\"]]$drinkingwater, useNA = \"ifany\") #>  #>    0    1  #> 1204   86 fct_plot_indic_donut(indicator = datalist[[\"main\"]]$drinkingwater,                      iconunicode = \"e006\") ## Check auxilliary table(datalist[[\"main\"]]$dwa_cond1, useNA = \"ifany\") #>  #>    0    1  #>   69 1221 table(datalist[[\"main\"]]$reachableU30, useNA = \"ifany\") #>  #>    0    1  #>    1 1289 table(datalist[[\"main\"]]$DWA02, useNA = \"ifany\") #>  #>    1    2    3 <NA>  #>   42   34   11 1203 table(datalist[[\"main\"]]$dwa_cond2, useNA = \"ifany\") #>  #>    0    1 <NA>  #>    1   86 1203"},{"path":"/articles/development.html","id":"inter_shelter","dir":"Articles","previous_headings":"Impact Indicators","what":"inter_shelter","title":"Development","text":"","code":"datalist <- kobocruncher::kobo_data( system.file(\"test.xlsx\",                                                   package = \"IndicatorCalc\")) #> Warning: Expecting logical in G1286 / R1286C7: got 'no'  mapper <- list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(                 \"What type of dwelling does the household live in?\", \"Main material of the dwelling floor\", \"Main material of the roof\", \"Main material of the exterior walls\", \"How many separate rooms do the members of your household occupy?\", \"What is the total number of persons in this household?\"),               variable = c(\"DWE01\",\"DWE02\",\"DWE03\",\"DWE04\",\"DWE05\",                             \"HH01\"),               mappattern = c(\"DWE01\",\"DWE02\",\"DWE03\",\"DWE04\",\"DWE05\",                             \"progres_groupsize\") ),             modalitymap = data.frame(               variable = c( \"DWE01\",\"DWE01\",                             \"DWE02\",\"DWE02\",\"DWE02\",                             \"DWE03\",\"DWE03\",\"DWE03\",\"DWE03\",\"DWE03\",\"DWE03\",                             \"DWE04\",\"DWE04\",\"DWE04\",\"DWE04\",\"DWE04\",\"DWE04\"),               label = c(  \"Apartment\", \"House\", # DWE01                          \"Earth/sand\", \"Dung\", \"Other (Specify)\", #DWE02                                                    \"Metal/tin\", \"Wood\", \"Calamine/Cement fibre\",                           \"Ceramic tiles\", \"Cement\", \"Roofing shingles\",#DWE03                                                    \"Cement\", \"Stone with lime/ cement\", \"Bricks\",                           \"Cement blocks\", \"Covered adobe\", \"Wood planks/shingles\" # DWE04                          ),               standard = c( \"1\",\"2\",                            \"1\", \"2\",\"96\",                            \"8\",\"9\",\"10\",\"11\",\"12\",\"13\",                            \"10\",\"11\",\"12\",\"13\",\"14\",\"15\"),               map = c(\"1\",\"2\",                            \"1\", \"2\",\"96\",                            \"8\",\"9\",\"10\",\"11\",\"12\",\"13\",                            \"10\",\"11\",\"12\",\"13\",\"14\",\"15\")))  ## Calculate datalist <-  inter_shelter(datalist, mapper) #> ℹ DWE01 standard variable was not found in the dataset. #> ℹ DWE02 standard variable was not found in the dataset. #> ℹ DWE03 standard variable was not found in the dataset. #> ℹ DWE04 standard variable was not found in the dataset. #> ℹ DWE05 standard variable was not found in the dataset. #> ℹ HH01 standard variable was not found in the dataset. #> ℹ DWE01 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> Mapped levels for DWE01 are now: 1, 2, 3, 5, 6, 7, 8, 9, 96 #> ℹ DWE02 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> Mapped levels for DWE02 are now: 1, 2, 3, 5, 6, 7, 8, 96 #> ℹ DWE03 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> Mapped levels for DWE03 are now: 1, 10, 11, 12, 13, 2, 4, 6, 7, 8, 9, 96 #> ℹ DWE04 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> Mapped levels for DWE04 are now: 1, 10, 11, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 8, 9, 96 #> Mapped levels for DWE05 are now: 1, 2, 3, 4, 5, 6 #> Mapped levels for HH01 are now: 1, 10, 11, 12, 2, 3, 4, 5, 6, 7, 8, 9 # Tabulate table(datalist[[\"main\"]]$dwe01_cat) #>  #>   0   1  #> 639 651 table(datalist[[\"main\"]]$dwe02_cat) #>  #>    0    1  #>   55 1235 table(datalist[[\"main\"]]$dwe03_cat) #>  #>    0    1  #>  154 1136 table(datalist[[\"main\"]]$dwe04_cat) #>  #>    0    1  #>  189 1101 table(datalist[[\"main\"]]$dwe05_cat) #>  #>   0   1  #> 409 881 table(datalist[[\"main\"]]$shelter) #>  #>   0   1  #> 860 430 #plot fct_plot_indic_donut(datalist[[\"main\"]]$shelter,                      iconunicode = \"e54f\")"},{"path":"/articles/development.html","id":"impact_2_2","dir":"Articles","previous_headings":"Impact Indicators","what":"impact_2_2","title":"Development","text":"","code":"datalist <- kobocruncher::kobo_data( system.file(\"test.xlsx\",                                                  package = \"IndicatorCalc\")) #> Warning: Expecting logical in G1286 / R1286C7: got 'no'  #Healthcare mapper <-  list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(   \"In general, when anyone in your household is sick,     where do they go to seek care?\",   \"How long does it take to go there when you use the mode of transport    that you mentioned above?\"),               variable = c(\"HEA01\",                             \"HEA03\"),               mappattern = c(\"HEA01\",                             \"HEA03\") ),             modalitymap = data.frame(               variable = c( \"HEA01\", \"HEA01\" ),               label = c(  \"Other, specify\", \"Don't know\"),               standard = c(\"96\", \"98\" ),               map = c(\"96\", \"98\" )))  datalist <- inter_healthcare(datalist, mapper ) #> ℹ HEA01 standard variable was not found in the dataset. #> ℹ HEA03 standard variable was not found in the dataset. #> ℹ HEA01 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> Mapped levels for HEA01 are now: 1, 2, 3, 4, 5, 96, 98 #> Mapped levels for HEA03 are now: 0, 1, 10, 100, 12, 120, 13, 15, 18, 2, 20, 22, 25, 3, 30, 300, 35, 4, 40, 45, 5, 50, 55, 6, 60, 7, 70, 75, 8, 90, 900  ## Electricity mapper <- list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(\"Does this household use anything for lighting?\",        \"What source of electricity is used most of the time in this household?\"),               variable = c(\"LIGHT01\",                             \"LIGHT03\"),               mappattern = c(\"LIGHT01\",                             \"LIGHT03\") ),             modalitymap = data.frame(               variable = c( \"LIGHT01\",                              \"LIGHT03\", \"LIGHT03\", \"LIGHT03\"),               label = c( \"yes\",                         \"No electricity in household\", \"Other, specify\", \"Don't know\"),               standard = c( \"1\",                            \"1\", \"96\", \"98\"),               map = c(\"yes\",                       \"1\", \"96\", \"98\")))   datalist <- inter_electricity( datalist =datalist, mapper = mapper  ) #> ℹ LIGHT01 standard variable was not found in the dataset. #> ℹ LIGHT03 standard variable was not found in the dataset. #> Mapped levels for LIGHT01 are now: 1, no, notell #> ℹ LIGHT03 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> Mapped levels for LIGHT03 are now: 1, 2, 3, 4, 5, 6, 7, 96, 98  ## Drinking Water ## in the contextualised form - DWA03a has been skipped and all results are in min...  ## only manual transformation can adjust this before we use the mapper..  datalist[[\"main\"]]$DWA03a  <- \"1\"   datalist[[\"main\"]]$DWA03b <-    datalist[[\"main\"]]$VulnerabilityScoring.BasicNeeds.DWA03  # now the mapper mapper <-  list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(                \"What is the main source of drinking water for this household?\",                \"Where is this source located?\",                \"Unit used to measure time to access\",                \"How long does it take to go there, get water, and come back,                 including waiting time?\"),               variable = c(\"DWA01\",                             \"DWA02\",                             \"DWA03a\",                             \"DWA03b\" ),               mappattern = c(\"DWA01\",                             \"DWA02\",                             \"DWA03a\",                             \"DWA03b\" ) ),             modalitymap = data.frame(              variable = c(\"DWA01\",  \"DWA01\", \"DWA01\",\"DWA01\",  \"DWA01\",                     \"DWA02\",\"DWA02\", \"DWA02\",                    \"DWA03a\",\"DWA03a\"),              label = c(                  ##DWA01                 \"Unprotected Dug Well\",                  \"Unprotected Spring\",                 \"Surface Water (River, Stream, Pond, Dam, Canal)\",                 \"Other, specify\",                 \"Don't know\",                 ##DWA02                 \"In Own Dwelling\",                  \"In Own Yard/Plot\",                 \"Elsewhere\",                 ## DWA03a                 \"Minutes\",                  \"Hours\"    ),              standard = c( \"7\", \"9\", \"13\", \"96\", \"98\",                            \"1\", \"2\", \"3\",                            \"1\", \"2\"),              map = c( \"7\", \"9\", \"13\", \"96\", \"98\",                        \"1\", \"2\", \"3\",                         \"1\", \"2\") )           )    datalist <- inter_drinkingwater(datalist, mapper ) #> ℹ DWA01 standard variable was not found in the dataset. #> ℹ DWA02 standard variable was not found in the dataset. #> DWA03a is in the dataset and has at least one of the expected modality for calculation #> ℹ DWA03b standard variable in the dataset misses at least one response among : #> ℹ DWA01 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> The following `from` values were not present in `x`: 9 #> Mapped levels for DWA01 are now: 1, 11, 12, 13, 14, 15, 2, 3, 4, 5, 7, 96, 98 #> ℹ DWA02 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> Mapped levels for DWA02 are now: 1, 2, 3 #> The following `from` values were not present in `x`: 2 #> Mapped levels for DWA03a are now: 1 #> Mapped levels for DWA03b are now: 0, 10, 15, 2, 3, 30, 5, 90  ##Shelter mapper <- list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(                 \"What type of dwelling does the household live in?\", \"Main material of the dwelling floor\", \"Main material of the roof\", \"Main material of the exterior walls\", \"How many separate rooms do the members of your household occupy?\", \"What is the total number of persons in this household?\"),               variable = c(\"DWE01\",\"DWE02\",\"DWE03\",\"DWE04\",\"DWE05\",                             \"HH01\"),               mappattern = c(\"DWE01\",\"DWE02\",\"DWE03\",\"DWE04\",\"DWE05\",                             \"progres_groupsize\") ),             modalitymap = data.frame(               variable = c( \"DWE01\",\"DWE01\",                             \"DWE02\",\"DWE02\",\"DWE02\",                             \"DWE03\",\"DWE03\",\"DWE03\",\"DWE03\",\"DWE03\",\"DWE03\",                             \"DWE04\",\"DWE04\",\"DWE04\",\"DWE04\",\"DWE04\",\"DWE04\"),               label = c(  \"Apartment\", \"House\", # DWE01                          \"Earth/sand\", \"Dung\", \"Other (Specify)\", #DWE02                                                    \"Metal/tin\", \"Wood\", \"Calamine/Cement fibre\",                           \"Ceramic tiles\", \"Cement\", \"Roofing shingles\",#DWE03                                                    \"Cement\", \"Stone with lime/ cement\", \"Bricks\",                           \"Cement blocks\", \"Covered adobe\", \"Wood planks/shingles\" # DWE04                          ),               standard = c( \"1\",\"2\",                            \"1\", \"2\",\"96\",                            \"8\",\"9\",\"10\",\"11\",\"12\",\"13\",                            \"10\",\"11\",\"12\",\"13\",\"14\",\"15\"),               map = c(\"1\",\"2\",                            \"1\", \"2\",\"96\",                            \"8\",\"9\",\"10\",\"11\",\"12\",\"13\",                            \"10\",\"11\",\"12\",\"13\",\"14\",\"15\")))  ## Calculate datalist <-  inter_shelter(datalist, mapper) #> ℹ DWE01 standard variable was not found in the dataset. #> ℹ DWE02 standard variable was not found in the dataset. #> ℹ DWE03 standard variable was not found in the dataset. #> ℹ DWE04 standard variable was not found in the dataset. #> ℹ DWE05 standard variable was not found in the dataset. #> ℹ HH01 standard variable was not found in the dataset. #> ℹ DWE01 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> Mapped levels for DWE01 are now: 1, 2, 3, 5, 6, 7, 8, 9, 96 #> ℹ DWE02 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> Mapped levels for DWE02 are now: 1, 2, 3, 5, 6, 7, 8, 96 #> ℹ DWE03 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> Mapped levels for DWE03 are now: 1, 10, 11, 12, 13, 2, 4, 6, 7, 8, 9, 96 #> ℹ DWE04 variable has more than one variable pattern match in the dataset. We will take the first one but good to check... #> Mapped levels for DWE04 are now: 1, 10, 11, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 8, 9, 96 #> Mapped levels for DWE05 are now: 1, 2, 3, 4, 5, 6 #> Mapped levels for HH01 are now: 1, 10, 11, 12, 2, 3, 4, 5, 6, 7, 8, 9  ## and now impact  mapper <-   list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(\"Access to shelter\",                          \"Access to electricity\",                           \"Access to drinking water\",                           \"Access to  healthcare\"),               variable = c(\"shelter\",                             \"electricity\",                             \"drinkingwater\",                             \"healthcare\"),               mappattern = c(\"shelter\",                             \"electricity\",                             \"drinkingwater\",                             \"healthcare\") ),             modalitymap = data.frame(               variable = c( \"shelter\", \"shelter\",                            \"electricity\",  \"electricity\",                             \"drinkingwater\", \"drinkingwater\",                             \"healthcare\",\"healthcare\"),               label = c( \"Yes\",\"No\",                        \"Yes\",\"No\",                        \"Yes\",\"No\",                        \"Yes\",\"No\"),               standard = c( \"1\",\"0\",                            \"1\",\"0\",                            \"1\",\"0\",                            \"1\",\"0\"),               map = c(\"1\",\"0\",                            \"1\",\"0\",                            \"1\",\"0\",                            \"1\",\"0\")))   datalist <-  impact_2_2(datalist, mapper) #> shelter is in the dataset and has at least one of the expected modality for calculation #> electricity is in the dataset and has at least one of the expected modality for calculation #> drinkingwater is in the dataset and has at least one of the expected modality for calculation #> healthcare is in the dataset and has at least one of the expected modality for calculation  fct_plot_indic_donut(indicator = datalist[[\"main\"]]$impact2_2,                      iconunicode = \"f140\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edouard Legoupil. Author, maintainer. Ilgi Bozdag. Contributor. UNHCR. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Legoupil E (2023). IndicatorCalc: Calculate Standard Survey Indicators Forcibly Displaced Population. R package version 0.0.0.9000, https://github.com/unhcr-americas/IndicatorCalc.","code":"@Manual{,   title = {IndicatorCalc: Calculate Standard Survey Indicators for Forcibly Displaced Population},   author = {Edouard Legoupil},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://github.com/unhcr-americas/IndicatorCalc}, }"},{"path":"/index.html","id":"indicatorcalc","dir":"","previous_headings":"","what":"Calculate Standard Survey Indicators for Forcibly Displaced\n    Population","title":"Calculate Standard Survey Indicators for Forcibly Displaced\n    Population","text":"goal {IndicatorCalc} ease implementation standard calculation survey indicators related Forcibly Displaced Population. package designed work based dataset standard backup format exported kobotoolbox within UNHCR internal data repository. adapted initial RMS indicator script calculation implemented function -built check identify whether expected variables modalities within dataset mapper transform data expected format needs . can check function reference see details documented calculations","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Calculate Standard Survey Indicators for Forcibly Displaced\n    Population","text":"easiest way use package shiny interface follow instruction ","code":""},{"path":"/index.html","id":"developpers","dir":"","previous_headings":"","what":"Developpers","title":"Calculate Standard Survey Indicators for Forcibly Displaced\n    Population","text":"can install development version {IndicatorCalc} GitHub : package development roadmap includes: wrapper chain single calculations report template output quick exploration indicators results shiny app provide access package online Rstudio connect (versus offline rstudio)","code":"# install.packages(\"devtools\") devtools::install_github(\"unhcr-americas/IndicatorCalc\")"},{"path":"/reference/fct_check_map.html","id":null,"dir":"Reference","previous_headings":"","what":"fct_check_map — fct_check_map","title":"fct_check_map — fct_check_map","text":"check standard variable modalities","code":""},{"path":"/reference/fct_check_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fct_check_map — fct_check_map","text":"","code":"fct_check_map(datalist, mapper)"},{"path":"/reference/fct_check_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fct_check_map — fct_check_map","text":"datalist list hierarchical data frame survey data set. format expected match Excel export synchronized kobo RILD loaded  kobocruncher::kobo_data() mapper list providing mapping variables used calculation - mapper potentially adjusted relation deviation standard XlsForm contextualized dataset","code":""},{"path":"/reference/fct_check_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fct_check_map — fct_check_map","text":"TRUE FALSE","code":""},{"path":"/reference/fct_check_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fct_check_map — fct_check_map","text":"","code":"mapper = list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(\"Does this household use anything for lighting?\",                         \"What source of electricity is used most of the time in this household?\"),               variable = c(\"LIGHT01\",                             \"LIGHT03\"),               mappattern = c(\"LIGHT01\",                             \"LIGHT03\") ),             modalitymap = data.frame(               variable = c( \"LIGHT01\",                              \"LIGHT03\", \"LIGHT03\", \"LIGHT03\"),               label = c( \"yes\",                         \"No electricity in household\", \"Other, specify\", \"Don't know\"),               standard = c( \"1\",                            \"1\", \"96\", \"98\"),               map = c(\"1\",                       \"1\", \"96\", \"98\")             )           )  ## Correct format data <- list(main = data.frame(                 LIGHT01 = c(\"1\",  \"1\",  \"0\", \"1\",  \"1\",  \"0\", \"1\",  \"1\",  \"1\"),                 LIGHT03 = c(\"1\", \"96\", \"98\", \"1\", \"96\", \"98\", \"0\", \"96\", \"98\"))              ) fct_check_map(datalist = data, mapper = mapper ) #> LIGHT01 is in the dataset and has at least one of the expected modality for calculation #> LIGHT03 is in the dataset and has at least one of the expected modality for calculation  ## One variable is not correctly  data <- list(main = data.frame(                 LIGHT01 = c(\"1\",  \"1\",  \"0\", \"1\",  \"1\",  \"0\", \"1\",  \"1\",  \"1\"),                 LIGH03 = c(\"1\", \"96\", \"98\", \"1\", \"96\", \"98\", \"0\", \"96\", \"98\"))              ) fct_check_map(datalist = data, mapper = mapper ) #> LIGHT01 is in the dataset and has at least one of the expected modality for calculation #> ℹ LIGHT03 standard variable was not found in the dataset.  ## The first variable does not include a single 1... data <- list(main = data.frame(                 LIGHT01 = c(\"0\",  \"0\",  \"0\", \"0\",  \"0\",  \"0\", \"0\",  \"0\",  \"0\"),                 LIGHT03 = c(\"1\", \"96\", \"98\", \"1\", \"96\", \"98\", \"0\", \"96\", \"98\"))              ) fct_check_map(datalist = data, mapper = mapper ) #> ℹ LIGHT01 standard variable in the dataset misses at least one response among : 1 #> LIGHT03 is in the dataset and has at least one of the expected modality for calculation"},{"path":"/reference/fct_get_all_variable_names.html","id":null,"dir":"Reference","previous_headings":"","what":"fct_get_all_variable_names — fct_get_all_variable_names","title":"fct_get_all_variable_names — fct_get_all_variable_names","text":"Generate map variables within datalist obtained RIDL - standard Kobo extract Excel","code":""},{"path":"/reference/fct_get_all_variable_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fct_get_all_variable_names — fct_get_all_variable_names","text":"","code":"fct_get_all_variable_names(datalist)"},{"path":"/reference/fct_get_all_variable_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fct_get_all_variable_names — fct_get_all_variable_names","text":"datalist list hierarchical data frame survey data set. format expected match Excel export synchronized kobo RILD loaded  kobocruncher::kobo_data()","code":""},{"path":"/reference/fct_get_all_variable_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fct_get_all_variable_names — fct_get_all_variable_names","text":"dataframe variables list member names","code":""},{"path":"/reference/fct_get_all_variable_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fct_get_all_variable_names — fct_get_all_variable_names","text":"","code":"data <- kobocruncher::kobo_data( system.file(\"test.xlsx\",                                              package = \"IndicatorCalc\")) #> Warning: Expecting logical in G1286 / R1286C7: got 'no' varname <-   fct_get_all_variable_names(datalist = data) head(varname, 10) #> # A tibble: 10 × 2 #>    df    value                          #>    <chr> <chr>                          #>  1 main  introchannels.testorreal       #>  2 main  introchannels.remoteorinperson #>  3 main  introchannels.interviewstat    #>  4 main  incompleteinterviewnote        #>  5 main  ConsentInterview2              #>  6 main  screen.YesDisplaced            #>  7 main  screen.YesAtrisk               #>  8 main  screen.DisplacedNo             #>  9 main  screen.YesOver15               #> 10 main  screen.Over15No"},{"path":"/reference/fct_plot_indic_donut.html","id":null,"dir":"Reference","previous_headings":"","what":"fct_plot_indic_donut — fct_plot_indic_donut","title":"fct_plot_indic_donut — fct_plot_indic_donut","text":"Wrapper summary chart indicator - allows add hint, source,  icon interpretation threshold available","code":""},{"path":"/reference/fct_plot_indic_donut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fct_plot_indic_donut — fct_plot_indic_donut","text":"","code":"fct_plot_indic_donut(   indicator,   subtitle_chart = NULL,   caption_chart = NULL,   ordered_threhold = NULL,   iconunicode = \"f496\" )"},{"path":"/reference/fct_plot_indic_donut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fct_plot_indic_donut — fct_plot_indic_donut","text":"ggplot2 object","code":""},{"path":"/reference/fct_plot_indic_donut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fct_plot_indic_donut — fct_plot_indic_donut","text":"","code":"test <- data.frame(   shelter = rbinom(20, 1, 0.5)) |>    dplyr::mutate( shelter =    labelled::labelled( shelter,                       labels = c( \"Yes\" = 1, \"No\" = 0),                       label = \"Access to adequate shelter\"))     fct_plot_indic_donut(indicator = test$shelter,                      subtitle_chart = NULL,                      caption_chart = NULL,                      ordered_threhold = NULL,                      iconunicode = \"e54f\")"},{"path":"/reference/fct_re_map.html","id":null,"dir":"Reference","previous_headings":"","what":"fct_re_map — fct_re_map","title":"fct_re_map — fct_re_map","text":"Take list hierarchical survey entry - use another list remap variables modalities specific questions","code":""},{"path":"/reference/fct_re_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fct_re_map — fct_re_map","text":"","code":"fct_re_map(datalist, mapper)"},{"path":"/reference/fct_re_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fct_re_map — fct_re_map","text":"datalist list hierarchical data frame survey data set. format expected match Excel export synchronized kobo RILD loaded  kobocruncher::kobo_data() mapper list providing mapping variables used calculation - mapper potentially adjusted relation deviation standard XlsForm contextualized dataset","code":""},{"path":"/reference/fct_re_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fct_re_map — fct_re_map","text":"datalist","code":""},{"path":"/reference/fct_re_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fct_re_map — fct_re_map","text":"","code":"mapper = list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(\"Does this household use anything for lighting?\",                         \"What source of electricity is used most of the time in this household?\"),               variable = c(\"LIGHT01\",                             \"LIGHT03\"),               mappattern = c(\"LIGHT01\",                             \"LIGHT03\") ),             modalitymap = data.frame(               variable = c( \"LIGHT01\",                              \"LIGHT03\", \"LIGHT03\", \"LIGHT03\"),               label = c( \"yes\",                 \"No electricity in household\", \"Other, specify\", \"Don't know\"),               standard = c( \"1\",                            \"1\", \"96\", \"98\"),               map = c(\"yes\",                       \"Noelec\", \"Other\", \"Dontknow\")             )           )   ## One variable is not correctly  datalist <- list(mainhousehold = data.frame(                 group.LIGHT01 = c(\"yes\",  \"yes\",  \"no\", \"yes\",  \"yes\",                                   \"no\", \"yes\",  \"yes\",  \"yes\"),                 group.LIGHT03 = c(\"Noelec\", \"Other\", \"Dontknow\", \"Noelec\", \"Other\",                                   \"Dontknow\", \"Nuclear\", \"Other\", \"Dontknow\"))              ) datalist <- fct_re_map(datalist = datalist, mapper = mapper ) #> Mapped levels for LIGHT01 are now: 1, no #> Mapped levels for LIGHT03 are now: 1, 96, 98, Nuclear  fct_check_map(datalist = datalist, mapper = mapper ) #> LIGHT01 is in the dataset and has at least one of the expected modality for calculation #> LIGHT03 is in the dataset and has at least one of the expected modality for calculation"},{"path":"/reference/impact_2_2.html","id":null,"dir":"Reference","previous_headings":"","what":"impact_2_2 — impact_2_2","title":"impact_2_2 — impact_2_2","text":"Proportion Persons Concern residing physically safe secure settlements access basic facilities","code":""},{"path":"/reference/impact_2_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"impact_2_2 — impact_2_2","text":"","code":"impact_2_2(   datalist,   mapper = list(hierarchy = \"main\", variablemap = data.frame(label =     c(\"Access to shelter\", \"Access to electricity\", \"Access to drinking water\",     \"Access to  healthcare\"), variable = c(\"shelter\", \"electricity\", \"drinkingwater\",     \"healthcare\"), mappattern = c(\"shelter\", \"electricity\", \"drinkingwater\",     \"healthcare\")), modalitymap = data.frame(variable = c(\"shelter\", \"shelter\",     \"electricity\", \"electricity\", \"drinkingwater\", \"drinkingwater\", \"healthcare\",     \"healthcare\"), label = c(\"Yes\", \"No\", \"Yes\", \"No\", \"Yes\",       \"No\", \"Yes\", \"No\"),     standard = c(\"1\", \"0\", \"1\", \"0\", \"1\", \"0\", \"1\", \"0\"), map = c(\"1\", \"0\", \"1\", \"0\",     \"1\", \"0\", \"1\", \"0\"))) )"},{"path":"/reference/impact_2_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"impact_2_2 — impact_2_2","text":"datalist list hierarchical data frame survey data set. format expected match Excel export synchronized kobo RILD loaded  kobocruncher::kobo_data() mapper list providing mapping variables used calculation - mapper potentially adjusted relation deviation standard XlsForm contextualized dataset","code":""},{"path":"/reference/impact_2_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"impact_2_2 — impact_2_2","text":"new calculated variable - appended ...","code":""},{"path":"/reference/impact_2_2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"impact_2_2 — impact_2_2","text":"electricity, healthcare, drinking water adequate shelter calculated, check values variable , calculating 2.2 impact indicator. variables correctly calculated, can compute final variable impact 2.2 indicator. Numerator: Population residing physically safe secure settlements access basic facilities Denominator: Total population Formula: shelter=1 & electricity=1 & healthcare=1 & drinkingwater=1 Impact 2.2 \"1\" services accessible","code":""},{"path":"/reference/impact_2_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"impact_2_2 — impact_2_2","text":"","code":"datalist <- kobocruncher::kobo_data( system.file(\"test.xlsx\",                                                  package = \"IndicatorCalc\")) #> Warning: Expecting logical in G1286 / R1286C7: got 'no'  #Healthcare mapper <-  list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(   \"In general, when anyone in your household is sick,     where do they go to seek care?\",   \"How long does it take to go there when you use the mode of transport    that you mentioned above?\"),               variable = c(\"HEA01\",                             \"HEA03\"),               mappattern = c(\"HEA01\",                             \"HEA03\") ),             modalitymap = data.frame(               variable = c( \"HEA01\", \"HEA01\" ),               label = c(  \"Other, specify\", \"Don't know\"),               standard = c(\"96\", \"98\" ),               map = c(\"96\", \"98\" )))  datalist <- inter_healthcare(datalist, mapper ) #> ℹ HEA01 standard variable was not found in the dataset. #> ℹ HEA03 standard variable was not found in the dataset. #> ℹ HEA01 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> Mapped levels for HEA01 are now: 1, 2, 3, 4, 5, 96, 98 #> Mapped levels for HEA03 are now: 0, 1, 10, 100, 12, 120, 13, 15, 18, 2, 20, 22, 25, 3, 30, 300, 35, 4, 40, 45, 5, 50, 55, 6, 60, 7, 70, 75, 8, 90, 900  ## Electricity mapper <- list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(\"Does this household use anything for lighting?\",        \"What source of electricity is used most of the time in this household?\"),               variable = c(\"LIGHT01\",                             \"LIGHT03\"),               mappattern = c(\"LIGHT01\",                             \"LIGHT03\") ),             modalitymap = data.frame(               variable = c( \"LIGHT01\",                              \"LIGHT03\", \"LIGHT03\", \"LIGHT03\"),               label = c( \"yes\",                         \"No electricity in household\", \"Other, specify\", \"Don't know\"),               standard = c( \"1\",                            \"1\", \"96\", \"98\"),               map = c(\"yes\",                       \"1\", \"96\", \"98\")))   datalist <- inter_electricity( datalist =datalist, mapper = mapper  ) #> ℹ LIGHT01 standard variable was not found in the dataset. #> ℹ LIGHT03 standard variable was not found in the dataset. #> Mapped levels for LIGHT01 are now: 1, no, notell #> ℹ LIGHT03 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> Mapped levels for LIGHT03 are now: 1, 2, 3, 4, 5, 6, 7, 96, 98  ## Drinking Water ## in the contextualised form - DWA03a has been skipped and all results are in min...  ## only manual transformation can adjust this before we use the mapper..  datalist[[\"main\"]]$DWA03a  <- \"1\"   datalist[[\"main\"]]$DWA03b <-    datalist[[\"main\"]]$VulnerabilityScoring.BasicNeeds.DWA03  # now the mapper mapper <-  list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(                \"What is the main source of drinking water for this household?\",                \"Where is this source located?\",                \"Unit used to measure time to access\",                \"How long does it take to go there, get water, and come back,                 including waiting time?\"),               variable = c(\"DWA01\",                             \"DWA02\",                             \"DWA03a\",                             \"DWA03b\" ),               mappattern = c(\"DWA01\",                             \"DWA02\",                             \"DWA03a\",                             \"DWA03b\" ) ),             modalitymap = data.frame(              variable = c(\"DWA01\",  \"DWA01\", \"DWA01\",\"DWA01\",  \"DWA01\",                     \"DWA02\",\"DWA02\", \"DWA02\",                    \"DWA03a\",\"DWA03a\"),              label = c(                  ##DWA01                 \"Unprotected Dug Well\",                  \"Unprotected Spring\",                 \"Surface Water (River, Stream, Pond, Dam, Canal)\",                 \"Other, specify\",                 \"Don't know\",                 ##DWA02                 \"In Own Dwelling\",                  \"In Own Yard/Plot\",                 \"Elsewhere\",                 ## DWA03a                 \"Minutes\",                  \"Hours\"    ),              standard = c( \"7\", \"9\", \"13\", \"96\", \"98\",                            \"1\", \"2\", \"3\",                            \"1\", \"2\"),              map = c( \"7\", \"9\", \"13\", \"96\", \"98\",                        \"1\", \"2\", \"3\",                         \"1\", \"2\") )           )    datalist <- inter_drinkingwater(datalist, mapper ) #> ℹ DWA01 standard variable was not found in the dataset. #> ℹ DWA02 standard variable was not found in the dataset. #> DWA03a is in the dataset and has at least one of the expected modality for calculation #> ℹ DWA03b standard variable in the dataset misses at least one response among :  #> ℹ DWA01 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> The following `from` values were not present in `x`: 9 #> Mapped levels for DWA01 are now: 1, 11, 12, 13, 14, 15, 2, 3, 4, 5, 7, 96, 98 #> ℹ DWA02 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> Mapped levels for DWA02 are now: 1, 2, 3 #> The following `from` values were not present in `x`: 2 #> Mapped levels for DWA03a are now: 1 #> Mapped levels for DWA03b are now: 0, 10, 15, 2, 3, 30, 5, 90  ##Shelter mapper <- list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(                 \"What type of dwelling does the household live in?\", \"Main material of the dwelling floor\", \"Main material of the roof\", \"Main material of the exterior walls\", \"How many separate rooms do the members of your household occupy?\", \"What is the total number of persons in this household?\"),               variable = c(\"DWE01\",\"DWE02\",\"DWE03\",\"DWE04\",\"DWE05\",                             \"HH01\"),               mappattern = c(\"DWE01\",\"DWE02\",\"DWE03\",\"DWE04\",\"DWE05\",                             \"progres_groupsize\") ),             modalitymap = data.frame(               variable = c( \"DWE01\",\"DWE01\",                             \"DWE02\",\"DWE02\",\"DWE02\",                             \"DWE03\",\"DWE03\",\"DWE03\",\"DWE03\",\"DWE03\",\"DWE03\",                             \"DWE04\",\"DWE04\",\"DWE04\",\"DWE04\",\"DWE04\",\"DWE04\"),               label = c(  \"Apartment\", \"House\", # DWE01                          \"Earth/sand\", \"Dung\", \"Other (Specify)\", #DWE02                                                    \"Metal/tin\", \"Wood\", \"Calamine/Cement fibre\",                           \"Ceramic tiles\", \"Cement\", \"Roofing shingles\",#DWE03                                                    \"Cement\", \"Stone with lime/ cement\", \"Bricks\",                           \"Cement blocks\", \"Covered adobe\", \"Wood planks/shingles\" # DWE04                          ),               standard = c( \"1\",\"2\",                            \"1\", \"2\",\"96\",                            \"8\",\"9\",\"10\",\"11\",\"12\",\"13\",                            \"10\",\"11\",\"12\",\"13\",\"14\",\"15\"),               map = c(\"1\",\"2\",                            \"1\", \"2\",\"96\",                            \"8\",\"9\",\"10\",\"11\",\"12\",\"13\",                            \"10\",\"11\",\"12\",\"13\",\"14\",\"15\")))  ## Calculate datalist <-  inter_shelter(datalist, mapper) #> ℹ DWE01 standard variable was not found in the dataset. #> ℹ DWE02 standard variable was not found in the dataset. #> ℹ DWE03 standard variable was not found in the dataset. #> ℹ DWE04 standard variable was not found in the dataset. #> ℹ DWE05 standard variable was not found in the dataset. #> ℹ HH01 standard variable was not found in the dataset. #> ℹ DWE01 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> Mapped levels for DWE01 are now: 1, 2, 3, 5, 6, 7, 8, 9, 96 #> ℹ DWE02 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> Mapped levels for DWE02 are now: 1, 2, 3, 5, 6, 7, 8, 96 #> ℹ DWE03 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> Mapped levels for DWE03 are now: 1, 10, 11, 12, 13, 2, 4, 6, 7, 8, 9, 96 #> ℹ DWE04 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> Mapped levels for DWE04 are now: 1, 10, 11, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 8, 9, 96 #> Mapped levels for DWE05 are now: 1, 2, 3, 4, 5, 6 #> Mapped levels for HH01 are now: 1, 10, 11, 12, 2, 3, 4, 5, 6, 7, 8, 9  ## and now impact  mapper <-   list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(\"Access to shelter\",                          \"Access to electricity\",                           \"Access to drinking water\",                           \"Access to  healthcare\"),               variable = c(\"shelter\",                             \"electricity\",                             \"drinkingwater\",                             \"healthcare\"),               mappattern = c(\"shelter\",                             \"electricity\",                             \"drinkingwater\",                             \"healthcare\") ),             modalitymap = data.frame(               variable = c( \"shelter\", \"shelter\",                            \"electricity\",  \"electricity\",                             \"drinkingwater\", \"drinkingwater\",                             \"healthcare\",\"healthcare\"),               label = c( \"Yes\",\"No\",                        \"Yes\",\"No\",                        \"Yes\",\"No\",                        \"Yes\",\"No\"),               standard = c( \"1\",\"0\",                            \"1\",\"0\",                            \"1\",\"0\",                            \"1\",\"0\"),               map = c(\"1\",\"0\",                            \"1\",\"0\",                            \"1\",\"0\",                            \"1\",\"0\")))   datalist <-  impact_2_2(datalist, mapper) #> shelter is in the dataset and has at least one of the expected modality for calculation #> electricity is in the dataset and has at least one of the expected modality for calculation #> drinkingwater is in the dataset and has at least one of the expected modality for calculation #> healthcare is in the dataset and has at least one of the expected modality for calculation  fct_plot_indic_donut(indicator = datalist[[\"main\"]]$impact2_2,                      iconunicode = \"f140\")"},{"path":"/reference/inter_drinkingwater.html","id":null,"dir":"Reference","previous_headings":"","what":"inter_drinkingwater — inter_drinkingwater","title":"inter_drinkingwater — inter_drinkingwater","text":"Access clean drinking water essential person's survival well precursor achieving protection outcomes related health, education economic developed. calculation access drinking water linked SGD Indicator 6.1.1. questionnaire module analysis guidance taken UNICEF MICS6. Numerator: Population using improved sources drinking water either dwelling/yard/plot within 30 minutes round trip collection time Denominator: Total population Formula: DWA03 < 30 (30 minutes), & DWA01 != 7,9,13,96,98 & DWA02 != 3 basic service calculated main dataset three conditions  improved source, dwelling/yard/plot reachable 30 minutes","code":""},{"path":"/reference/inter_drinkingwater.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"inter_drinkingwater — inter_drinkingwater","text":"","code":"inter_drinkingwater(   datalist,   mapper = list(hierarchy = \"main\", variablemap = data.frame(label =     c(\"What is the main source of drinking water for this household?\",     \"Where is this source located?\", \"Unit used to measure time to access\",     \"How long does it take to go there, get water, and come back,\\n                  including waiting time?\"),     variable = c(\"DWA01\", \"DWA02\", \"DWA03a\", \"DWA03b\"), mappattern = c(\"DWA01\", \"DWA02\",     \"DWA03a\", \"DWA03b\")), modalitymap = data.frame(variable = c(\"DWA01\", \"DWA01\",     \"DWA01\", \"DWA01\", \"DWA01\", \"DWA02\",       \"DWA02\", \"DWA02\", \"DWA03a\", \"DWA03a\"),     label = c(\"Unprotected Dug Well\", \"Unprotected Spring\",     \"Surface Water (River, Stream, Pond, Dam, Canal)\", \"Other, specify\", \"Don't know\",     \"In Own Dwelling\", \"In Own Yard/Plot\", \"Elsewhere\", \"Minutes\", \"Hours\"), standard =     c(\"7\", \"9\", \"13\", \"96\", \"98\", \"1\", \"2\", \"3\", \"1\", \"2\"), map = c(\"7\", \"9\", \"13\", \"96\",     \"98\", \"1\", \"2\", \"3\", \"1\", \"2\"))) )"},{"path":"/reference/inter_drinkingwater.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"inter_drinkingwater — inter_drinkingwater","text":"datalist list hierarchical data frame survey data set. format expected match Excel export synchronized kobo RILD loaded  kobocruncher::kobo_data() mapper list providing mapping variables used calculation - mapper potentially adjusted relation deviation standard XlsForm contextualized dataset","code":""},{"path":"/reference/inter_drinkingwater.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"inter_drinkingwater — inter_drinkingwater","text":"new calculated variable - appended ...","code":""},{"path":"/reference/inter_drinkingwater.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"inter_drinkingwater — inter_drinkingwater","text":"","code":"datalist <- kobocruncher::kobo_data( system.file(\"test.xlsx\",                                                  package = \"IndicatorCalc\")) #> Warning: Expecting logical in G1286 / R1286C7: got 'no'  ## in the contextualised form - DWA03a has been skipped and all results are in min...  ## only manual transformation can adjust this before we use the mapper..  datalist[[\"main\"]]$DWA03a  <- \"1\"   datalist[[\"main\"]]$DWA03b <-    datalist[[\"main\"]]$VulnerabilityScoring.BasicNeeds.DWA03  # now the mapper mapper <-  list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(    \"What is the main source of drinking water for this household?\",   \"Where is this source located?\",   \"Unit used to measure time to access\",   \"How long does it take to go there, wait get water, and come back?\"),               variable = c(\"DWA01\",                             \"DWA02\",                             \"DWA03a\",                             \"DWA03b\" ),               mappattern = c(\"DWA01\",                             \"DWA02\",                             \"DWA03a\",                             \"DWA03b\" ) ),             modalitymap = data.frame(              variable = c(\"DWA01\",  \"DWA01\", \"DWA01\",\"DWA01\",  \"DWA01\",                     \"DWA02\",\"DWA02\", \"DWA02\",                    \"DWA03a\",\"DWA03a\"),              label = c(                  ##DWA01                 \"Unprotected Dug Well\",                  \"Unprotected Spring\",                 \"Surface Water (River, Stream, Pond, Dam, Canal)\",                 \"Other, specify\",                 \"Don't know\",                 ##DWA02                 \"In Own Dwelling\",                  \"In Own Yard/Plot\",                 \"Elsewhere\",                 ## DWA03a                 \"Minutes\",                  \"Hours\"    ),              standard = c( \"7\", \"9\", \"13\", \"96\", \"98\",                            \"1\", \"2\", \"3\",                            \"1\", \"2\"),              map = c( \"7\", \"9\", \"13\", \"96\", \"98\",                        \"1\", \"2\", \"3\",                         \"1\", \"2\") )           )    datalist <- inter_drinkingwater(datalist, mapper ) #> ℹ DWA01 standard variable was not found in the dataset. #> ℹ DWA02 standard variable was not found in the dataset. #> DWA03a is in the dataset and has at least one of the expected modality for calculation #> ℹ DWA03b standard variable in the dataset misses at least one response among :  #> ℹ DWA01 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> The following `from` values were not present in `x`: 9 #> Mapped levels for DWA01 are now: 1, 11, 12, 13, 14, 15, 2, 3, 4, 5, 7, 96, 98 #> ℹ DWA02 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> Mapped levels for DWA02 are now: 1, 2, 3 #> The following `from` values were not present in `x`: 2 #> Mapped levels for DWA03a are now: 1 #> Mapped levels for DWA03b are now: 0, 10, 15, 2, 3, 30, 5, 90  ## Indicator summary table(datalist[[\"main\"]]$drinkingwater, useNA = \"ifany\") #>  #>    0    1  #> 1204   86  fct_plot_indic_donut(indicator = datalist[[\"main\"]]$drinkingwater,                      iconunicode = \"e006\")    ## Check auxilliary table(datalist[[\"main\"]]$dwa_cond1, useNA = \"ifany\") #>  #>    0    1  #>   69 1221  table(datalist[[\"main\"]]$reachableU30, useNA = \"ifany\") #>  #>    0    1  #>    1 1289  table(datalist[[\"main\"]]$DWA02, useNA = \"ifany\") #>  #>    1    2    3 <NA>  #>   42   34   11 1203  table(datalist[[\"main\"]]$dwa_cond2, useNA = \"ifany\") #>  #>    0    1 <NA>  #>    1   86 1203"},{"path":"/reference/inter_electricity.html","id":null,"dir":"Reference","previous_headings":"","what":"inter_electricity — inter_electricity","title":"inter_electricity — inter_electricity","text":"Households lighting provides sense safety security within outside households sunset. households lack access electricity, especially lighting connectivity, affects occupants' security limits opportunities socialization, learning self-reliance. Numerator: Population access electricity, especially lighting connectivity Denominator: Total population Formula: LIGHT01 = 1 & LIGHT03 != 1, 96, 98","code":""},{"path":"/reference/inter_electricity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"inter_electricity — inter_electricity","text":"","code":"inter_electricity(   datalist,   mapper = list(hierarchy = \"main\", variablemap = data.frame(label =     c(\"Does this household use anything for lighting?\",     \"What source of electricity is used most of the time in this household?\"), variable =     c(\"LIGHT01\", \"LIGHT03\"), mappattern = c(\"LIGHT01\", \"LIGHT03\")), modalitymap =     data.frame(variable = c(\"LIGHT01\", \"LIGHT03\", \"LIGHT03\", \"LIGHT03\"), label = c(\"yes\",     \"No electricity in household\", \"Other, specify\", \"Don't know\"), standard = c(\"1\",     \"1\", \"96\", \"98\"), map = c(\"1\", \"1\", \"96\", \"98\"))) )"},{"path":"/reference/inter_electricity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"inter_electricity — inter_electricity","text":"datalist list hierarchical data frame survey data set. format expected match Excel export synchronized kobo RILD loaded  kobocruncher::kobo_data() mapper list providing mapping variables used calculation - mapper potentially adjusted relation deviation standard XlsForm contextualized dataset","code":""},{"path":"/reference/inter_electricity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"inter_electricity — inter_electricity","text":"new calculated variable - appended ...","code":""},{"path":"/reference/inter_electricity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"inter_electricity — inter_electricity","text":"","code":"datalist <- kobocruncher::kobo_data( system.file(\"test.xlsx\",                                                   package = \"IndicatorCalc\")) #> Warning: Expecting logical in G1286 / R1286C7: got 'no' mapper <- list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(\"Does this household use anything for lighting?\",        \"What source of electricity is used most of the time in this household?\"),               variable = c(\"LIGHT01\",                             \"LIGHT03\"),               mappattern = c(\"LIGHT01\",                             \"LIGHT03\") ),             modalitymap = data.frame(               variable = c( \"LIGHT01\",                              \"LIGHT03\", \"LIGHT03\", \"LIGHT03\"),               label = c( \"yes\",                         \"No electricity in household\", \"Other, specify\", \"Don't know\"),               standard = c( \"1\",                            \"1\", \"96\", \"98\"),               map = c(\"yes\",                       \"1\", \"96\", \"98\")))   datalist <- inter_electricity( datalist =datalist, mapper = mapper  ) #> ℹ LIGHT01 standard variable was not found in the dataset. #> ℹ LIGHT03 standard variable was not found in the dataset. #> Mapped levels for LIGHT01 are now: 1, no, notell #> ℹ LIGHT03 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> Mapped levels for LIGHT03 are now: 1, 2, 3, 4, 5, 6, 7, 96, 98   table(datalist[[\"main\"]]$electricity) #>  #>    0    1  #>   81 1209  fct_plot_indic_donut(indicator = datalist[[\"main\"]]$electricity,                      iconunicode = \"f0e7\")"},{"path":"/reference/inter_healthcare.html","id":null,"dir":"Reference","previous_headings":"","what":"inter_healthcare — inter_healthcare","title":"inter_healthcare — inter_healthcare","text":"Access healthcare depends availability healthcare, including physical reach, acceptability affordability . indicator, focus availability healthcare system. According Sphere Handbook, primary healthcare facility accessible within one hour's walk dwellings. Numerator: Population can reach primary healthcare facility within one hour dwellings Denominator: Total population Formula: HEA01 != 96, 98 & HEA03 <= 60 (reachable within one hour/60 minutes)","code":""},{"path":"/reference/inter_healthcare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"inter_healthcare — inter_healthcare","text":"","code":"inter_healthcare(   datalist,   mapper = list(hierarchy = \"main\", variablemap = data.frame(label =     c(\"In general, when anyone in your household is sick,  where do they go to seek care?\",     \"How long does it take to go there when you use the mode of transport that you mentioned above?\"),     variable = c(\"HEA01\", \"HEA03\"), mappattern = c(\"HEA01\", \"HEA03\")), modalitymap =     data.frame(variable = c(\"HEA01\", \"HEA01\"), label = c(\"Other, specify\", \"Don't know\"),     standard = c(\"96\", \"98\"), map = c(\"96\", \"98\"))) )"},{"path":"/reference/inter_healthcare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"inter_healthcare — inter_healthcare","text":"datalist list hierarchical data frame survey data set. format expected match Excel export synchronized kobo RILD loaded  kobocruncher::kobo_data() mapper list providing mapping variables used calculation - mapper potentially adjusted relation deviation standard XlsForm contextualized dataset","code":""},{"path":"/reference/inter_healthcare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"inter_healthcare — inter_healthcare","text":"new calculated variable - appended ...","code":""},{"path":"/reference/inter_healthcare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"inter_healthcare — inter_healthcare","text":"","code":"datalist <- kobocruncher::kobo_data( system.file(\"test.xlsx\",                                                  package = \"IndicatorCalc\")) #> Warning: Expecting logical in G1286 / R1286C7: got 'no'  mapper <-  list(             hierarchy = \"main\",             variablemap = data.frame(               label = c( \"In general, when anyone in your household is sick, where do they go to seek care?\", \"How long it takes to go there when you use the mode of transport mentioned above?\"),               variable = c(\"HEA01\",                             \"HEA03\"),               mappattern = c(\"HEA01\",                             \"HEA03\") ),             modalitymap = data.frame(               variable = c( \"HEA01\", \"HEA01\" ),               label = c(  \"Other, specify\", \"Don't know\"),               standard = c(\"96\", \"98\" ),               map = c(\"96\", \"98\" )))  datalist <- inter_healthcare(datalist, mapper ) #> ℹ HEA01 standard variable was not found in the dataset. #> ℹ HEA03 standard variable was not found in the dataset. #> ℹ HEA01 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> Mapped levels for HEA01 are now: 1, 2, 3, 4, 5, 96, 98 #> Mapped levels for HEA03 are now: 0, 1, 10, 100, 12, 120, 13, 15, 18, 2, 20, 22, 25, 3, 30, 300, 35, 4, 40, 45, 5, 50, 55, 6, 60, 7, 70, 75, 8, 90, 900  table(datalist[[\"main\"]]$healthcare) #>  #>    0    1  #>   93 1197  fct_plot_indic_donut(indicator = datalist[[\"main\"]]$healthcare,                      iconunicode = \"f479\")"},{"path":"/reference/inter_shelter.html","id":null,"dir":"Reference","previous_headings":"","what":"inter_shelter — inter_shelter","title":"inter_shelter — inter_shelter","text":"right access adequate housing protected international law. concept \"adequacy\" means housing four walls roof indicated Sphere Handbook. Habitable housing primarily refers fact housing provide protection cold, damp, heat, rain, wind, threats health, structural hazards, disease vectors overcrowded. shelter/housing primarily contextual element, may discrepancies country country data measured. Adequate shelter measured based improved material dwelling indicated DHS publication housing conditions also used MICS6. Overcrowding also used occurs three people per habitable room defined UN-Habitat.   Formula:","code":"**Numerator**: Population that have access to adequate housing **Denominator**: Total population"},{"path":"/reference/inter_shelter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"inter_shelter — inter_shelter","text":"","code":"inter_shelter(   datalist,   mapper = list(hierarchy = \"main\", variablemap = data.frame(label =     c(\"What type of dwelling does the household live in?\",     \"Main material of the dwelling floor\", \"Main material of the roof\",     \"Main material of the exterior walls\",     \"How many separate rooms do the members of your household occupy?\",     \"What is the total number of persons in this household?\"), variable = c(\"DWE01\",     \"DWE02\", \"DWE03\", \"DWE04\", \"DWE05\", \"HH01\"), mappattern = c(\"DWE01\", \"DWE02\",     \"DWE03\", \"DWE04\", \"DWE05\", \"HH01\")), modalitymap = data.frame(variable = c(\"DWE01\",           \"DWE01\", \"DWE02\", \"DWE02\", \"DWE02\", \"DWE03\", \"DWE03\", \"DWE03\", \"DWE03\", \"DWE03\",     \"DWE03\", \"DWE04\", \"DWE04\", \"DWE04\", \"DWE04\", \"DWE04\", \"DWE04\"), label =     c(\"Apartment\", \"House\", \"Earth/sand\", \"Dung\", \"Other (Specify)\", \"Metal/tin\", \"Wood\",     \"Calamine/Cement fibre\", \"Ceramic tiles\", \"Cement\", \"Roofing shingles\", \"Cement\",     \"Stone with lime/ cement\", \"Bricks\", \"Cement blocks\", \"Covered adobe\",     \"Wood planks/shingles\"), standard = c(\"1\", \"2\", \"1\", \"2\", \"96\", \"8\", \"9\", \"10\", \"11\",     \"12\", \"13\", \"10\", \"11\",       \"12\", \"13\", \"14\", \"15\"), map = c(\"1\", \"2\", \"1\", \"2\",     \"96\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\"))) )"},{"path":"/reference/inter_shelter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"inter_shelter — inter_shelter","text":"datalist list hierarchical data frame survey data set. format expected match Excel export synchronized kobo RILD loaded  kobocruncher::kobo_data() mapper list providing mapping variables used calculation - mapper potentially adjusted relation deviation standard XlsForm contextualized dataset","code":""},{"path":"/reference/inter_shelter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"inter_shelter — inter_shelter","text":"new calculated variable - appended ...","code":""},{"path":"/reference/inter_shelter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"inter_shelter — inter_shelter","text":"Adequate shelter calculated main dataset classify habitable improved/adequate shelter","code":"*DWE01* = 1,2 &  *DWE02* = 3,4,5,6,7,8,9 &   *DWE03* = 8,9,10,11,12,13 &   *DWE04* = 10,11,12,13,14,15 &   crowding (*HH01*/*DWE05*) \\<= 3"},{"path":"/reference/inter_shelter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"inter_shelter — inter_shelter","text":"","code":"datalist <- kobocruncher::kobo_data( system.file(\"test.xlsx\",                                                   package = \"IndicatorCalc\")) #> Warning: Expecting logical in G1286 / R1286C7: got 'no'  mapper <- list(             hierarchy = \"main\",             variablemap = data.frame(               label = c(                 \"What type of dwelling does the household live in?\", \"Main material of the dwelling floor\", \"Main material of the roof\", \"Main material of the exterior walls\", \"How many separate rooms do the members of your household occupy?\", \"What is the total number of persons in this household?\"),               variable = c(\"DWE01\",\"DWE02\",\"DWE03\",\"DWE04\",\"DWE05\",                             \"HH01\"),               mappattern = c(\"DWE01\",\"DWE02\",\"DWE03\",\"DWE04\",\"DWE05\",                             \"progres_groupsize\") ),             modalitymap = data.frame(               variable = c( \"DWE01\",\"DWE01\",                             \"DWE02\",\"DWE02\",\"DWE02\",                             \"DWE03\",\"DWE03\",\"DWE03\",\"DWE03\",\"DWE03\",\"DWE03\",                             \"DWE04\",\"DWE04\",\"DWE04\",\"DWE04\",\"DWE04\",\"DWE04\"),               label = c(  \"Apartment\", \"House\", # DWE01                          \"Earth/sand\", \"Dung\", \"Other (Specify)\", #DWE02                                                    \"Metal/tin\", \"Wood\", \"Calamine/Cement fibre\",                           \"Ceramic tiles\", \"Cement\", \"Roofing shingles\",#DWE03                                                    \"Cement\", \"Stone with lime/ cement\", \"Bricks\",                           \"Cement blocks\", \"Covered adobe\", \"Wood planks/shingles\" # DWE04                          ),               standard = c( \"1\",\"2\",                            \"1\", \"2\",\"96\",                            \"8\",\"9\",\"10\",\"11\",\"12\",\"13\",                            \"10\",\"11\",\"12\",\"13\",\"14\",\"15\"),               map = c(\"1\",\"2\",                            \"1\", \"2\",\"96\",                            \"8\",\"9\",\"10\",\"11\",\"12\",\"13\",                            \"10\",\"11\",\"12\",\"13\",\"14\",\"15\")))  ## Calculate datalist <-  inter_shelter(datalist, mapper) #> ℹ DWE01 standard variable was not found in the dataset. #> ℹ DWE02 standard variable was not found in the dataset. #> ℹ DWE03 standard variable was not found in the dataset. #> ℹ DWE04 standard variable was not found in the dataset. #> ℹ DWE05 standard variable was not found in the dataset. #> ℹ HH01 standard variable was not found in the dataset. #> ℹ DWE01 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> Mapped levels for DWE01 are now: 1, 2, 3, 5, 6, 7, 8, 9, 96 #> ℹ DWE02 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> Mapped levels for DWE02 are now: 1, 2, 3, 5, 6, 7, 8, 96 #> ℹ DWE03 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> Mapped levels for DWE03 are now: 1, 10, 11, 12, 13, 2, 4, 6, 7, 8, 9, 96 #> ℹ DWE04 variable has more than one variable pattern match in the dataset. We will take the first one but good to check...  #> Mapped levels for DWE04 are now: 1, 10, 11, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 8, 9, 96 #> Mapped levels for DWE05 are now: 1, 2, 3, 4, 5, 6 #> Mapped levels for HH01 are now: 1, 10, 11, 12, 2, 3, 4, 5, 6, 7, 8, 9 # Tabulate table(datalist[[\"main\"]]$dwe01_cat) #>  #>   0   1  #> 639 651  table(datalist[[\"main\"]]$dwe02_cat) #>  #>    0    1  #>   55 1235  table(datalist[[\"main\"]]$dwe03_cat) #>  #>    0    1  #>  154 1136  table(datalist[[\"main\"]]$dwe04_cat) #>  #>    0    1  #>  189 1101  table(datalist[[\"main\"]]$dwe05_cat) #>  #>   0   1  #> 409 881  table(datalist[[\"main\"]]$shelter) #>  #>   0   1  #> 860 430  #plot fct_plot_indic_donut(datalist[[\"main\"]]$shelter,                      iconunicode = \"e54f\")"},{"path":"/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — run_app","title":"Run the Shiny Application — run_app","text":"Run Shiny Application","code":""},{"path":"/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — run_app","text":"","code":"run_app(   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — run_app","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. See ?golem::get_golem_options details.","code":""},{"path":"/news/index.html","id":"indicatorcalc-0009000","dir":"Changelog","previous_headings":"","what":"IndicatorCalc 0.0.0.9000","title":"IndicatorCalc 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
